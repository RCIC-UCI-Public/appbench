#!/bin/bash
module load bwa/0.7.8
module load samtools/1.3.1
module load java/1.7.0
module load picard-tools/1.87

[ -z ${NTASKS+x} ] && NTASKS=1

dir="."
ref="$dir/pero.scaff.fa"
# ls testdir/*READ1-Sequences.txt.gz > test.in
files="$dir/test.in"
results="$dir/results"

# I ran these command once, to build the indexes that are re-used
# I think they port to other machines without being rebuilt ... but I would not change the versions
# the 1st command can take a few hours
#bwa index pero.scaff.fa
#samtools faidx pero.scaff.fa
#samtools dict pero.scaff.fa



## How many cores for each TASK
CPUS=$(cat /proc/cpuinfo | grep processor | wc -l)
let TASKCPUS=$CPUS/$NTASKS

## How much memory per core
RESERVE=10
MEMTOTAL=$(free -g | grep -i Mem: | awk '{print $2}')
let MEMTOTAL=$MEMTOTAL-$RESERVE
let MEMCORE=$MEMTOTAL/$CPUS
let MEMTASK=$MEMTOTAL/$NTASKS

echo "Memtotal: $MEMTOTAL; memtask: $MEMTASK memcore: $MEMCORE"

for i in `seq 1 $NTASKS`; do 
        TASKID=$i

        forwardname=`head -n $TASKID $files | tail -n 1`
        reversename=`echo $forwardname | sed 's/READ1/READ2/'`
        samplename=$(basename $forwardname | cut -d '-' -f 1,2,3)
        echo "Testing ($i:$TASKCPUS): $forwardname $reversename $samplename"

        if [ ! -d $results ]; then mkdir -p $results; fi 
        ### subshell for each TASK, put in the background
        (                                                                                                                   \       
             (time bwa mem -t $TASKCPUS -M $ref $forwardname $reversename | samtools view -bS - > $dir/$samplename.bam)     \
                            &> $results/time.bwa.mem.$TASKID;                                                               \ 
             (time samtools sort -m ${MEMCORE}G -@ $TASKCPUS $dir/$samplename.bam  -o $dir/$samplename.sort.bam)            \
                            &> $results/time-samtools-sort.$TASKID;                                                         \
             (time java -Xmx${MEMTASK}g -jar $PICARDTOOLS/AddOrReplaceReadGroups.jar I=$dir/$samplename.sort.bam            \
                             O=$dir/$samplename.RG.bam SORT_ORDER=coordinate RGPL=illumina RGPU=D109LACXX RGLB=$samplename  \
                             RGID=$samplename RGSM=$samplename VALIDATION_STRINGENCY=LENIENT)                               \
                            &> $results/time-picard-tools-sort.$TASKID;                                                     \  
             (time samtools index $dir/$samplename.RG.bam)                                                                  \
                            &> $results/time-samtools-index.$TASKID;                                                         \
        ) &> $results/run.$TASKID &

done

